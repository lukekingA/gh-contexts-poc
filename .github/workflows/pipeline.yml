name: jobs context poc


on: [push]

jobs:
  test-steps-context:
    runs-on: ubuntu-latest
    
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: set env var
        # working-directory: ./.github/workflows/scripts
        run: |
          pwd
          ls -la
          cd ./.github/workflows/scripts
          echo "FOO=bar" >> $GITHUB_ENV
      - name: echo env var
        run: |
          pwd
          echo $FOO
      - name: use foo for if false
        if: ${{ env.FOO != 'bar' }}
        run: |
          echo "FOO is not bar. I should not run" 
      - name: use foo for if true
        if: ${{ env.FOO == 'bar' }}
        run: |
          pwd
          echo "${FOO} is bar. I should run"



# on:
#   pull_request:
#     branches:
#       - main
#     types:
#       - closed

# permissions:
#   contents: read

# env:
#   SLOBS: 

# jobs:
#   job-1:
#     runs-on: ubuntu-latest
#     steps:
#       - name: echo job-1
#         run: echo "job-1"

#   check-change:
#     runs-on: ubuntu-latest
#     needs: job-1
#     outputs:
#       change: ${{ steps.check-change.outputs.change }}
#     steps:
#       - name: check out code
#         uses: actions/checkout@v4
#       - name: check change
#         id: check-change
#         run: |
#           git branch
#           git fetch origin
#           flag=$(git diff --name-only origin/${{ github.head_ref}}..origin/${{github.base_ref}} -- ./.github/workflows/scripts/**)
#           if [ -z "$flag" ]; then
#             echo "change=false" >> $GITHUB_OUTPUT
#           else
#             echo "change=true" >> $GITHUB_OUTPUT
#           fi

#   job-2:
#     runs-on: ubuntu-latest
#     needs: check-change
#     steps:
#       - name: echo job-2
#         run: |
#           if [ "${{ needs.check-change.outputs.change }}" == 'false' ]; then
#             echo "change not found"
#             exit 0
#           fi
#           echo "job-2"


#   job-3:
#     runs-on: ubuntu-latest
#     needs: job-2
#     steps:
#       - name: echo job-3
#         run: |
#           echo "job-3"
#           exit 1

#   job-4:
#     runs-on: ubuntu-latest
#     needs: [job-1, job-2, job-3]
#     if: failure()
#     steps:
#       - name: find failed job
#         env:
#           JOBS: ${{ toJson(needs) }}
#         run: |
#           FAILED_JOB=$(echo $JOBS | jq 'to_entries[] | select(.value.result == "failure") | .key')
#           echo "FAILED_JOB=$FAILED_JOB" >> $GITHUB_ENV
#       - name: report failed job
#         uses: dawidd6/action-send-mail@v2
#         with:
#           server_address: smtp.sendgrid.net
#           server_port: 587
#           username: ${{ secrets.SENDGRID_USER }}
#           password: ${{ secrets.SENDGRID_PASSWORD }}
#           subject: 'Test Email'
#           body: "Job ${{ env.FAILED_JOB }} failed"
#           to: 'lxkdevtesting@gmail.com'
      

